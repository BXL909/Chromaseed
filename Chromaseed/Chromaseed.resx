<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="label27.Text" xml:space="preserve">
    <value>Before you start using Chromaseed it is important to understand that the software relies on you typing in your seed phrase. Chromaseed itself has no online capability but it's important not to ever type your seed phrase in to an internet-connected device, and ideally not to ever type it in to ANY device, other than a dedicated signing device. Therefore, it is recommended that you do not use Chromaseed for any amount of bitcoin that you consider significant.

Chromaseed converts your 12 or 24 word seed phrase into a series of 8 or 16 colours. Unlike your seed phrase, where the order of the words is of utmost importance, the order of the colours is not important at all. When the colours are translated back to words, the original order is preserved. The process is exactly the same as that first described by @EnteroPositivo (https://github.com/enteropositivo/bip39colors/tree/main/manual), and is easy to replicate manually, as below.

Convert seed to colour:
1. Create a single numeric string of 48 or 96 digits. The string is made up of sets of 4 digits. Each 4 digit set represents the position of each seed word in the alphabetically sorted BIP39 word list (filled with leading zeros if necessary).
2. Split the numeric string into groups of 6 digits.
3. Add a 2-digit sequential number to the start of each of the 6 digits (00, 02, 04, 06, 08, 10, 12, 14 or 00, 01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, 13, 14, 15, 16) resulting in either 8 or 16 8 digit numbers.
4. Convert each of the 8 digit numbers to hexadecimal.

Convert colour to seed:
1. Convert the hexadecimal colours to decimal, and left fill with zeros if necessary, resulting in 8 or 16 8-digit values.
2. Sort the 8 or 16 8-digit values from lowest to highest.
3. Remove the first 2 digits, resulting in 8 or 16 6-digit values.
4. Concatenate the 8/16 values into one string.
5. Split the string into groups of 4 digits.
6. Look up the positions in the alphabetically sorted BIP39 word list to determine the original seed phrase.

Chromaseed produces a variety of coloured designs based on the colours derived from your seed phrase. These have been designed to use all of 'your' colours. Nevertheless, it's strongly recommended that when saving any of the designs, you also choose to save the actual colour values too. The colour values can be gleaned from the images using a colour picker tool, but given that your bitcoin relies on it*, it's recommended that you record the list of number values too.

* refer back to the initial paragraph!</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>115, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B/96QgH/eUIC/32wJ/+U7ib/lvMh/5fxKv+1xAz/tsoB/7N8P/+rH4b/rCKLolZZ78xgS+P/cLSe/3vp
        WP+B7mz/d/mZ/3j5av9m+Kf/Xvia/2H5fv9h+G//c4sm/39PAP9/Vgb/bs9P/2j6W/9s9VH/bfNL/27z
        Rf9u6Tn/eGkM/3pEAf96QgH/dqE8/3ruXP+L7Tn/hfNF/5/QJP+nywr/qJ02/6Qjjf+mIZjPTF/05lhT
        6/9hwbP/Zd6D/23rn/9o+az/aPiQ/1f23v9Q9eD/T/PY/0zw0v9rikr/fVAA/31WDP9gxp7/Ue7Q/1Pq
        x/9V58H/WN2x/2ejaP95TQn/eUUC/3dGC/9mt3//Yumg/3vmXP927Wb/idRI/5XEIv+YqkL/nSiW/58f
        pehEZ/jvT1zz/1TEy/9U163/X+nD/1z4wv9e97D/Vffo/0z25v9K8+L/R+/d/2iIUv97TQf/ek8M/29x
        Pv9pfVP/aXxQ/2t3Sv9wZTP/dkkQ/3ZCB/9zQQv/aIBW/1Xbs/9V4rb/at6C/2fji/90znL/gLdM/4Wo
        Y/+WKqP/mB2y8Dtx++5EZfn/SMLg/0fRzf9W5tn/VPjY/1f3yf9Y9/L/SfT0/0Tx8v8+7O//YYFf/3lH
        EP92SBT/ckwc/25MIf9wSh//ckIU/3Q7DP9zPBD/bkci/1SRjf9Eztz/Qtnj/0fa4P9a0qv/V9uu/2LB
        mf9qpX3/cpmM/5Aos/+SHL7wNn774Tts/P9Au+7/O8zk/0/d6P9Q+Oj/TfTd/1319f9J8v3/QO/9/zfq
        +/9de2z/dz4c/3RCJP9Lo6P/NsTa/zi81f8+qLz/WWRd/3A1G/9uOiT/Vo6T/zjP+v850vz/P9Lz/0zG
        yP9N1Mr/WK63/1yTp/9ohLD/iyLD/4scy+Myi/rCNXT9/zyu9v8zxvT/Rs3y/0/18v9C8uz/WvLz/0zx
        /P9A7P3/Nuf8/1l1df90NCv/cToz/0C1yP8q3P//LNT//yrP//8xr9n/Zz05/24qI/9lREH/Ob3i/zPU
        //8/x+//Q77c/0TK3v9Pks7/UIHJ/2Rpyv+GHNH/hBzWwzWX+JAxgP3/OZ34/zHE+v82vfn/Uuv3/z7x
        9v9J6fX/Tev7/zzh/f8y2v3/V2p//3EpOv9vMEL/PqjL/ynM//8qxP//KsH//zWl3f9lNUX/ayQu/2c0
        P/85rdn/MMn+/zux7v85u+7/P7rr/0hy4v9GdeH/Zkva/4AZ3P99Hd6QParyUDGS/PQ0jfr/MsH7/yu0
        /f9L1Pj/RPH6/zbm+f9F4vn/O9f3/zq95v9gUHn/ciBJ/28nT/9Fk7z/Mrjr/zKw6P87ntX/WVWB/2wf
        P/9sHDj/XUVi/y+y7/8xrvj/MqX2/zG7+f89lvP/Ql3x/0Vn7/9uLeP/eBnp9HYf405f1ucYPrL5zDCL
        /f80svr/Krj9/zW1+/9P5/n/Nuv8/zDd+v9RiLr/aCxy/3AcXv9yGVj/cBtZ/2onZf9mK2v/Zitp/2oh
        XP9vFUz/bRVG/2QqVf89j8H/K7P7/y+Z+P8pqv3/MK/6/z5k9/89WPr/TlDy/3Ab7P9yG/DJciPgFhWh
        /wBa1vJ6OKH8/y+X+v8tvPz/Jqn9/0G/+P9E6fr/LOT+/0GIxP9iM4b/YT6F/2A6gv9tG2z/bBpp/142
        ff9nImz/bhNe/2Axc/9NWJT/NZrT/yyt+f8ukvn/J6H9/yew/P84e/n/PU39/zxX/P9gLvL/bRj0/20e
        8HVrFf8Aeu3oAIP05CBRxvfWMJD8/zGo+f8os/z/J5z8/z6/+P875fz/Ktj7/ym58v8wuO//Mrvq/2A2
        i/9fNYf/Kbjt/0xdo/9qF2r/OZXQ/ym2+/8unfr/LI75/ySf/f8lrPz/NIX5/z1K/P84Uf3/TUH3/2oa
        +P9oHffSZyPnHWgi6QD94W8AL8//AG/k72NCsPv5MYr7/y+r+f8npv3/KZH8/zqz9/843Pr/Ktr+/yLF
        /P8pqvP/YS6V/2Iwkf8vq/P/UFSt/2sSc/88fNf/LJH7/yaW/P8ipf7/Jqr7/zR++f8+Rv3/Okr+/0RI
        +v9lIPj/Zhz792Ql8V1iIP8AdD8AAJThxACJ7dsApv/QCGbW9Jk9nvz/NIT7/zCl+v8onP7/KYT8/zWW
        +P86xPj/Ltb7/yPN+/8/fsb/QHfG/yOn+/82f9f/Rl6z/yif8P8irf7/JK78/y2a+f86Zfn/PkL9/ztH
        /v9CSPv/YST7/2Ub/f9jJfWTZzbOBmUs3gBrJcIAAAAAAH3t4wB46+0AifXoF1bE+LI8jP3/O3f7/zOW
        +f8qlv3/K3/+/zJ4+/83kfn/NLH4/yzD+/8nxvz/JsH8/yS9/f8lt/z/Kqv7/zGT+P85bPj/Pkj7/z5A
        /f86SP3/R0T7/2Mk/P9mG/z/YyP3rWQx4hRjLOsAYiznAAAAAAAAAAAAgHdzAHHv/QBt2fQAc93xHEyp
        +q5BfP3/RmX7/z96+f8wjfv/LIH9/y9u/f8zZfz/OGf7/zlt+v85bvv/O2j6/ztd+/8+Tfv/QEL9/z5B
        /f88R/3/QEn8/1M4+/9oHvz/aBv9/2cj9qxtLecaZyrwAGIr+QBuHnYAAAAAAAAAAAAAAAAAhJqkAFXR
        /wBawfUAXbruE0qR+I9Obvz1V0/9/1ZQ+v9Iavj/OHr6/zF3/P8ybP3/NWD+/zdW/v85UP7/OU7+/zpN
        /f88T/3/Qkz7/1I8+/9mJfz/bxn+/2wc/PRpJPWNbS7jE2kp8QBlJ/wAbSzPAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAepeyAEWm9wBYqfIAbLLYBVx/9VRhYPrHZ0X8/Gwz/f9rNfr/YEP6/1RQ+v9NVfv/SlP7/0xO
        +/9RR/v/Vzz7/2Iv+/9tIf3/cxn+/3Ma/PxxIPfEbibvUW03wQVsK+oAaSn5AHkswwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAcKDRAF+Y7QBhmeYAU3L/AHVw5xR0U/NhdED4t3cy++p6Kf39eyT9/3kg
        /v95H/7/eh3+/3ob/v96Gv7/eRv8/Hcd++l0IPe2cyTvX3Ir3xNsIv8AbS3YAGws4QBqJaQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbBFbAHR3yABxJf8AcmrqAG9Q/wCDT9gLfUHsOH05
        8nB9M/agfSv4wH0p+M58J/jNfCb3vn0m9J98JvBueijoN3YwzQt0IP8AcijjAHgl/wBvI7EAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAH/AAAA/gAAAHwAAAA4AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAAAABgAAAAcAAAAPgAAAH8AAAD/gAAD8=
</value>
  </data>
</root>